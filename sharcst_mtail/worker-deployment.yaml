apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.31.2 (a92241f79)
  creationTimestamp: "2023-12-21T21:26:50.52Z"
  labels:
    io.kompose.service: worker
  name: worker
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: worker
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.31.2 (a92241f79)
      creationTimestamp: "2023-12-21T21:26:50.52Z"
      labels:
        io.kompose.network/sharcst-mtail-default: "true"
        io.kompose.service: worker
    spec:
      containers:
        - args:
            - sidekiq
          env:
            - name: APP_GMAIL_PWD
              valueFrom:
                configMapKeyRef:
                  key: APP_GMAIL_PWD
                  name: sharcst-mtail--env
            - name: APP_NAME
              valueFrom:
                configMapKeyRef:
                  key: APP_NAME
                  name: sharcst-mtail--env
            - name: AWS_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  key: AWS_ACCESS_KEY
                  name: sharcst-mtail--env
            - name: AWS_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: AWS_BUCKET
                  name: sharcst-mtail--env
            - name: AWS_SECRET_KEY_ID
              valueFrom:
                configMapKeyRef:
                  key: AWS_SECRET_KEY_ID
                  name: sharcst-mtail--env
            - name: BINDING
              valueFrom:
                configMapKeyRef:
                  key: BINDING
                  name: sharcst-mtail--env
            - name: CLIENT_URL
              valueFrom:
                configMapKeyRef:
                  key: CLIENT_URL
                  name: sharcst-mtail--env
            - name: DB_URL
              valueFrom:
                configMapKeyRef:
                  key: DB_URL
                  name: sharcst-mtail--env
            - name: JWT_ALG
              valueFrom:
                configMapKeyRef:
                  key: JWT_ALG
                  name: sharcst-mtail--env
            - name: JWT_HMAC
              valueFrom:
                configMapKeyRef:
                  key: JWT_HMAC
                  name: sharcst-mtail--env
            - name: JWT_TTL
              valueFrom:
                configMapKeyRef:
                  key: JWT_TTL
                  name: hsharcst-mtail--env
            - name: MAILER_PASS
              valueFrom:
                configMapKeyRef:
                  key: MAILER_PASS
                  name: sharcst-mtail--env
            - name: MAIN_MAILER
              valueFrom:
                configMapKeyRef:
                  key: MAIN_MAILER
                  name: sharcst-mtail--env
            - name: MINIO_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  key: MINIO_ACCESS_KEY
                  name: sharcst-mtail--env
            - name: MINIO_BUCKET
              valueFrom:
                configMapKeyRef:
                  key: MINIO_BUCKET
                  name: sharcst-mtail--env
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: MINIO_ROOT_PASSWORD
                  name: sharcst-mtail--env
            - name: MINIO_ROOT_USER
              valueFrom:
                configMapKeyRef:
                  key: MINIO_ROOT_USER
                  name: sharcst-mtail--env
            - name: MINIO_SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  key: MINIO_SECRET_KEY
                  name: sharcst-mtail--env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: sharcst-mtail--env
            - name: PROD_CLIENT_URL
              valueFrom:
                configMapKeyRef:
                  key: PROD_CLIENT_URL
                  name: sharcst-mtail--env
            - name: PWD
              valueFrom:
                configMapKeyRef:
                  key: PWD
                  name: sharcst-mtail--env
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_DEFAULT_PASS
                  name: sharcst-mtail--env
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_DEFAULT_USER
                  name: sharcst-mtail--env
            - name: RABBITMQ_DEFAULT_VHOST
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_DEFAULT_VHOST
                  name: sharcst-mtail--env
            - name: RABBITMQ_EXCHANGE
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_EXCHANGE
                  name: sharcst-mtail--env
            - name: RABBITMQ_HOST
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_HOST
                  name: sharcst-mtail--env
            - name: RABBITMQ_PORT
              valueFrom:
                configMapKeyRef:
                  key: RABBITMQ_PORT
                  name: sharcst-mtail--env
            - name: REDIS_DEV_CACHE_URL
              valueFrom:
                configMapKeyRef:
                  key: REDIS_DEV_CACHE_URL
                  name: hsharcst-mtail--env
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  key: REDIS_HOST
                  name: hsharcst-mtail--env
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PORT
                  name: sharcst-mtail--env
            - name: REDIS_PROD_CACHE_URL
              valueFrom:
                configMapKeyRef:
                  key: REDIS_PROD_CACHE_URL
                  name: sharcst-mtail--env
            - name: REDIS_URL
              valueFrom:
                configMapKeyRef:
                  key: REDIS_URL
                  name: sharcst-mtail--env
            - name: SLACK_URL
              valueFrom:
                configMapKeyRef:
                  key: SLACK_URL
                  name: sharcst-mtail--env
            - name: SM_DATABASE_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: SM_DATABASE_PASSWORD
                  name: sharcst-mtail--env
            - name: SM_DATABASE_USER
              valueFrom:
                configMapKeyRef:
                  key: SM_DATABASE_USER
                  name: sharcst-mtail--env
            - name: SSH_PATH
              valueFrom:
                configMapKeyRef:
                  key: SSH_PATH
                  name: hsharcst-mtail--env
            - name: TWILIO_ACCOUNT_SID
              valueFrom:
                configMapKeyRef:
                  key: TWILIO_ACCOUNT_SID
                  name: sharcst-mtail--env
            - name: TWILIO_SMS_SERVICE
              valueFrom:
                configMapKeyRef:
                  key: TWILIO_SMS_SERVICE
                  name: sharcst-mtail--env
            - name: TWILIO_TEST_USER_NUMBER
              valueFrom:
                configMapKeyRef:
                  key: TWILIO_TEST_USER_NUMBER
                  name: sharcst-mtail--env
            - name: TWILIO_TOKEN
              valueFrom:
                configMapKeyRef:
                  key: TWILIO_TOKEN
                  name: sharcst-mtail--env
            - name: TWILIO_WHATSAPP_SERVICE
              valueFrom:
                configMapKeyRef:
                  key: TWILIO_WHATSAPP_SERVICE
                  name: sharcst-mtail--env
            - name: TW_MESSENGER_TOKEN
              valueFrom:
                configMapKeyRef:
                  key: TW_MESSENGER_TOKEN
                  name: sharcst-mtail--env
          image: worker
          name: sharcst-sidekiq
      resources:
      requests:
        memory: "256Mi"
        cpu: "250m"
      limits:
        memory: "256Mi"
        cpu: "250m"
      restartPolicy: Always
status: {}
